name: Build SDL_mixer

on:
  workflow_dispatch:

jobs:
  determine-version:
    name: Determine Latest SDL_mixer Version
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.get_version.outputs.release_tag }}
      version_number: ${{ steps.get_version.outputs.version_number }}
      mixer_original_tag: ${{ steps.get_version.outputs.mixer_original_tag }}
    steps:
      - name: Get latest SDL_mixer release info
        id: get_version
        run: |
          ORIGINAL_RELEASE_TAG=$(gh release list --repo libsdl-org/SDL_mixer --limit 1 --json tagName | jq -r ".[0].tagName")
          echo "Determined ORIGINAL_RELEASE_TAG: ${ORIGINAL_RELEASE_TAG}"
          echo "mixer_original_tag=${ORIGINAL_RELEASE_TAG}" >> $GITHUB_OUTPUT
          if [ -z "${ORIGINAL_RELEASE_TAG}" ] || [ "${ORIGINAL_RELEASE_TAG}" == "null" ]; then
            echo "::error::Failed to determine ORIGINAL_RELEASE_TAG."
            exit 1
          fi

          # Construct the new release tag for sdl2_mixer
          NEW_RELEASE_TAG="sdl2_mixer-${ORIGINAL_RELEASE_TAG}"
          echo "Constructed NEW_RELEASE_TAG: ${NEW_RELEASE_TAG}"
          echo "release_tag=${NEW_RELEASE_TAG}" >> $GITHUB_OUTPUT

          # VERSION_NUMBER is derived from the ORIGINAL_RELEASE_TAG (e.g., release-x.y.z -> x.y.z)
          VERSION_NUMBER=$(echo "${ORIGINAL_RELEASE_TAG}" | sed 's/^release-//')
          echo "Determined VERSION_NUMBER: ${VERSION_NUMBER}"
          if [ -z "${VERSION_NUMBER}" ]; then
            echo "::error::Failed to determine VERSION_NUMBER from ORIGINAL_RELEASE_TAG: ${ORIGINAL_RELEASE_TAG}."
            exit 1
          fi
          echo "version_number=${VERSION_NUMBER}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
   name: Download Windows
   runs-on: ubuntu-latest
   needs: determine-version
   strategy:
     fail-fast: false
     matrix:
       arch: [x64]
   steps:
     - name: Download release build
       run: wget https://github.com/libsdl-org/SDL_mixer/releases/download/${{ needs.determine-version.outputs.mixer_original_tag }}/SDL2_mixer-${{ needs.determine-version.outputs.version_number }}-win32-${{ matrix.arch }}.zip
     - name: Upload Build Artifact
       uses: actions/upload-artifact@v4
       with:
         name: sdl2_mixer-windows-${{ matrix.arch }} # Artifact name reflects content
         path: SDL2_mixer-${{ needs.determine-version.outputs.version_number }}-win32-${{ matrix.arch }}.zip

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    needs: determine-version
    container: registry.gitlab.steamos.cloud/steamrt/sniper/sdk:beta
    defaults:
      run:
        working-directory: SDL_mixer
    steps:
      - name: Set up Ninja
        uses: aseprite/get-ninja@main
      - name: Set up SDL
        uses: libsdl-org/setup-sdl@main
        id: sdl
        with:
          cmake-generator: Ninja
          version: 2-head
          shell: sh
      - name: Set up Linux dependencies
        working-directory: .
        run: |
          sudo apt-get update
          sudo apt-get -y install \
          cmake \
          libasound2-dev \
          libflac-dev \
          libfluidsynth-dev \
          libgme-dev \
          libmpg123-dev \
          libopusfile-dev \
          libvorbis-dev \
          libxmp-dev \
          libwavpack-dev \
          ninja-build \
          pkg-config \
          ${NULL+}
      - name: Clone SDL_mixer
        working-directory: .
        run: git clone --recurse-submodules --branch ${{ needs.determine-version.outputs.mixer_original_tag }} https://github.com/libsdl-org/SDL_mixer.git
      - name: Check that versioning is consistent
        # We only need to run this once: arbitrarily use the Linux build
        run: ./build-scripts/test-versioning.sh
      - name: Configure
        run: >
          cmake -G Ninja
          -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DSDLMIXER_FLAC=ON \
          -DSDLMIXER_FLAC_LIBFLAC=ON \
          -DSDLMIXER_GME=ON \
          -DSDLMIXER_MOD_XMP=ON \
          -DSDLMIXER_MP3_MPG123=ON \
          -DSDLMIXER_OPUS=ON \
          -DSDLMIXER_VORBIS=VORBISFILE \
          -DBUILD_SHARED_LIBS=ON
          -DSDL_SHARED=ON
          -DSDL_STATIC=OFF
          -DSDL_DISABLE_INSTALL=ON
          -DSDL_DISABLE_INSTALL_DOCS=ON
          -DSDLMIXER_SAMPLES=OFF
          -DSDLMIXER_INSTALL=OFF
          -DSDLMIXER_VENDORED=ON
          -S . -B build
      - name: Build
        run: cmake --build build --config Release
      - name: Package Linux library
        working-directory: SDL_mixer/build
        run: |
          # Assuming libSDL2_mixer.so.0 is the correct file
          zip "../SDL2_mixer-${{ needs.determine-version.outputs.version_number }}-linux-x86_64.zip" libSDL2_mixer-2.0.so.0
      - name: Upload Linux Build
        uses: actions/upload-artifact@v4
        with:
            name: sdl-mixer-linux-zip
            path: SDL_mixer/SDL2_mixer-${{ needs.determine-version.outputs.version_number }}-linux-x86_64.zip

  build-macos:
    name: Build for Apple (Universal)
    runs-on: macos-latest
    needs: determine-version
    defaults:
      run:
        working-directory: SDL_mixer
    steps:
      - name: Set up Ninja
        uses: aseprite/get-ninja@main
      - name: Set up SDL
        id: sdl
        uses: libsdl-org/setup-sdl@main
        with:
          cmake-generator: Ninja
          cmake-arguments: |
            -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" \
            -DSDL_DISABLE_INSTALL_DOCS=ON \
            -DSDL_INSTALL_TESTS=OFF
          version: 2-head
          shell: sh
      - name: Setup MacOS dependencies
        working-directory: .
        run: |
          brew install \
          libtool \
          ninja \
          flac \
          fluidsynth \
          game-music-emu \
          libvorbis \
          libxmp \
          mpg123 \
          opusfile \
          wavpack \
          ${NULL+}
      - name: Clone SDL_mixer
        working-directory: .
        run: git clone --recurse-submodules --branch ${{ needs.determine-version.outputs.mixer_original_tag }} https://github.com/libsdl-org/SDL_mixer.git
      - name: Configure
        run: >
          cmake -G Ninja
          -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" \
          -DCMAKE_C_FLAGS="-I/opt/homebrew/include/opus" \
          -DCMAKE_CXX_FLAGS="-I/opt/homebrew/include/opus" \
          -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DSDLMIXER_FLAC=ON \
          -DSDLMIXER_FLAC_LIBFLAC=ON \
          -DSDLMIXER_GME=ON \
          -DSDLMIXER_MOD_XMP=ON \
          -DSDLMIXER_MP3_MPG123=ON \
          -DSDLMIXER_OPUS=ON \
          -DSDLMIXER_VORBIS=VORBISFILE \
          -DBUILD_SHARED_LIBS=ON
          -DSDL_SHARED=ON
          -DSDL_STATIC=OFF
          -DSDL_DISABLE_INSTALL=ON
          -DSDL_DISABLE_INSTALL_DOCS=ON
          -DSDLMIXER_SAMPLES=OFF
          -DSDLMIXER_INSTALL=OFF
          -DSDLMIXER_VENDORED=ON
          -S . -B build
      - name: Build
        run: cmake --build build --config Release
      - name: Package macOS library
        working-directory: SDL_mixer/build
        run: |
          # Assuming libSDL2_mixer.0.dylib is the correct file and is now universal
          zip "../SDL2_mixer-${{ needs.determine-version.outputs.version_number }}-macos-universal.zip" libSDL2_mixer.0.dylib
      - name: Upload macOS Build
        uses: actions/upload-artifact@v4
        with:
            name: sdl-mixer-apple-macOS-universal-zip
            path: SDL_mixer/SDL2_mixer-${{ needs.determine-version.outputs.version_number }}-macos-universal.zip

  create-release:
    name: Create GitHub Release for SDL_mixer
    runs-on: ubuntu-latest
    needs: [determine-version, build-windows, build-linux, build-macos]
    permissions:
      contents: write # Required to create a release
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts # All artifacts will be downloaded into subdirectories under 'artifacts'

      - name: List downloaded files (for debugging)
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.determine-version.outputs.release_tag }} # Use the actual release tag
          name: "SDL_mixer ${{ needs.determine-version.outputs.version_number }}"
          body: "Automated release for SDL_mixer version ${{ needs.determine-version.outputs.version_number }}, including builds for Windows, Linux, and Apple platforms." # Added Windows
          files: |
            artifacts/sdl2_mixer-windows-x64/*.zip # Added Windows artifact
            artifacts/sdl-mixer-linux-zip/*.zip
            artifacts/sdl-mixer-apple-macOS-universal-zip/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
